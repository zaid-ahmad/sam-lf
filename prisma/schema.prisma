// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Branch {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  code String @unique
  name String
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String?
  lastName      String?
  email         String    @unique
  password      String
  branchCode    String    
  role          UserRole
  leadsCreated  Lead[]    @relation("CanvasserLeads")
  leadsAssigned Lead[]    @relation("SalesRepLeads")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Lead {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  branch          String        
  firstName       String
  lastName        String
  phone1          String        @unique
  phone2          String?
  email           String?
  address         String
  quadrant        Quadrant
  postalCode      String
  images          String[]
  addressNotes    String?
  appointmentDateTime String
  homeOwnerType   HomeOwnerType
  age             AgeRange
  concerns        String[]
  surrounding     String[]
  serviceNeeded   TypesOfServices[]
  status          LeadStatus?   @default(APPOINTMENT)
  amount          Float?
  reason          String?
  jobNumber       String?
  DNSFile         String?
  installationDate String?
  funded          Boolean       @default(false)
  canvasser          User          @relation("CanvasserLeads", fields: [canvasserId], references: [id])
  canvasserId        String        @db.ObjectId
  salesRep           User?         @relation("SalesRepLeads", fields: [salesRepId], references: [id])
  salesRepId         String?       @db.ObjectId
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Slots {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  branchCode String
  date      DateTime
  timeSlot  String
  limit     Int      @default(5)
  booked    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([branchCode, date, timeSlot])
}

enum Quadrant {
  NW
  NE
  SW
  SE
}

enum UserRole {
  ADMIN
  CANVASSER
  SALES_REP
  SUPERADMIN
}

enum LeadStatus {
  APPOINTMENT
  ASSIGNED
  DEAD
  DEMO
  SALE
  REBOOK
  CANCELLED
  INSTALL_CANCELLED
}

enum TypesOfServices {
  REPAIRS
  GUTTERS
  LF
  CSR
  FI
}

enum HomeOwnerType {
  MR_SHO
  MRS_SHO
  BOTH_ATTEND
  ONE_LEG
}

enum AgeRange {
  THIRTY_TO_FORTY
  FORTY_TO_FIFTY
  FIFTY_TO_SIXTY
  SIXTY_TO_SEVENTY
  SEVENTY_PLUS
}
